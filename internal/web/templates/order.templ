package templates

import (
	"fmt"

	"github.com/dan-nicholls/project-sourdough/internal/app"
	"github.com/dan-nicholls/project-sourdough/internal/utils"
)

templ OrderView(options []app.Option) {
	<div class="bg-background rounded-2xl shadow-xl p-8 flex gap-10 w-full max-w-2xl mx-auto flex-col" id="main-content" x-data="OrderForm()">
		for i, opt := range options {
			@OrderStep(i, opt)
		}

	</div>

	<script>
		const OrderForm = () => ({
			formIndex: 0,
			form: {},
			nextStep() {
				this.formIndex++;
			},
			prevStep() {
				this.formIndex--;
			}
		})
	</script>
}



templ OrderStep(index int, opt app.Option) {
	<template x-if={fmt.Sprintf("formIndex == %d", index)}>
		<div class="relative flex flex-col items-center w-full pt-16">

			<!-- Floating Image -->
			<div class="absolute -top-32" >
				<div class="bg-white rounded-xl shadow-md p-2 border border-yellow-200">
					<img src="/static/img/step_placeholder.png" class="rounded-md h-40 w-40 object-cover" alt="Bread Image">
				</div>
			</div>

			<!-- Step Title -->
			<h2 class="text-2xl font-bold text-gray-800 mb-4">{opt.Label}</h2>

			<!-- Options -->
			<div class="w-full">
				@RadioGroup(opt.Options, opt.Name)
			</div>

			
			<!-- Prev/Next Buttons -->
			<div class="flex gap-4 mt-6 w-full" >
				<button
					type="button"
					@click="prevStep()"
					class="flex-1 px-4 py-2 bg-yellow shadow rounded border">
					Back
				</button>
				<button
					type="button"
					@click="nextStep()"
					class="flex-1 px-4 py-2 bg-yellow shadow rounded border">
					Next
				</button>
			</div>
		</div>
	</template>
}

templ OrderDetails(previousValues map[string]string) {
	<form 
		hx-post={"/order/step/review"}
		hx-target="#order-flow"
		hx-swap="innerHTML"
	>
		<!-- json-encoded state -->
		for key, val := range previousValues {
			<input type="hidden" name={key} value={val} />
		}

		<label>please enter your contact details</label>
		<div>
			<label for="name">name</label>
			<input type="text" id="name" name="name" placeholder="enter name">
		</div>
		<div>
			<label for="email">email</label>
			<input type="email" id="email" name="email" placeholder="enter email">
		</div>

		<button 
			type="submit"
			class="x-4 py-2 px-6 bg-yellow text-text-light font-semibold rounded-lg shadow hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-yellow-400 transition">
			Next
		</button>
	</form>
}

templ OrderReview(previousValues map[string]string) {
	<form onsubmit="return false;">
		<!-- JSON-encoded state -->
		for key, val := range previousValues {
			<input type="hidden" name={key} value={val} />
		}

		<label>Order Details</label>
		<div>
			<pre>{fmt.Sprintf("%v", previousValues)}</pre>
		</div>

		<button
			hx-post="/api/order"
			hx-target="#order-flow"
			hx-swap="innerHTML"
			hx-headers='{"Content-Type": "application/json"}'
			hx-vals={utils.JsonEscapedString(previousValues)}
			class="x-4 py-2 px-6 bg-green-600 text-text-dark font-semibold rounded-lg shadow hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-yellow-400 transition">
			Submit
		</button>
	</form>
	
}

templ OrderStart() {
	<div>
		<h1>Lets begin!</h1>
		<form 
			hx-post="/order/step/0" 
			hx-target="#order-flow" 
			hx-swap="innerHTML"
		>
		<button 
			class="x-4 py-2 px-6 bg-yellow text-text-dark font-semibold rounded-lg shadow hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-yellow-400 transition">
			Start	
		</button>
		</form>
	</div>
}

templ OrderComplete() {
	@layout("This is a title") {
		<div>
			<h1>ðŸŽ‰ Yippee!! ðŸŽ‰</h1>
			<p>Order confirmed!</p>
		</div>
	}
}

templ OrderFailed() {
	@layout("This is another title") {
		<div>
			<h1>Oops!</h1>
			<p>i may have broken something, please let Dan know!</p>
			<button 
				hx-get="/"
				hx-target="body"
				hx-swap="innerHTML"
				hx-push-url="/"
				class="x-4 py-2 px-6 bg-yellow text-text-light font-semibold rounded-lg shadow hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-yellow-400 transition">
				Go Back
			</button>
		</div>
	}
}
