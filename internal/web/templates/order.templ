package templates

import (
	"strconv"
	"fmt"

	"github.com/dan-nicholls/project-sourdough/internal/app"
	"github.com/dan-nicholls/project-sourdough/internal/utils"
)

templ OrderFlow() {
	<div id="order-flow">
	  <div hx-get="/order/step/start" hx-trigger="load" hx-target="#order-flow" hx-swap="innerHTML"></div>
	</div>
}

templ StepForm(step app.Step, stepIndex int, totalSteps int, previousValues map[string]string) {
	<form 
		hx-post={"/order/step/" + strconv.Itoa(stepIndex+1)}
		hx-target="#order-flow"
		hx-swap="innerHTML"
	>
		<!-- JSON-encoded state -->
		for key, val := range previousValues {
			<input type="hidden" name={key} value={val} />
		}

		<label>{step.Label}</label>
		for _, opt := range step.Options {
			<div>
				<input type="radio" id={step.Name + "_" + opt} name={step.Name} value={opt} required />
				<label for={step.Name + "_" + opt}>{opt}</label>
			</div>
		}

		<button 
			type="submit"
			class="x-4 py-2 px-6 bg-yellow text-text-light font-semibold rounded-lg shadow hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-yellow-400 transition">
			Next
		</button>
	</form>
}

templ OrderDetails(previousValues map[string]string) {
	<form 
		hx-post={"/order/step/review"}
		hx-target="#order-flow"
		hx-swap="innerHTML"
	>
		<!-- json-encoded state -->
		for key, val := range previousValues {
			<input type="hidden" name={key} value={val} />
		}

		<label>please enter your contact details</label>
		<div>
			<label for="name">name</label>
			<input type="text" id="name" name="name" placeholder="enter name">
		</div>
		<div>
			<label for="email">email</label>
			<input type="email" id="email" name="email" placeholder="enter email">
		</div>

		<button 
			type="submit"
			class="x-4 py-2 px-6 bg-yellow text-text-light font-semibold rounded-lg shadow hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-yellow-400 transition">
			Next
		</button>
	</form>
}

templ OrderReview(previousValues map[string]string) {
	<form onsubmit="return false;">
		<!-- JSON-encoded state -->
		for key, val := range previousValues {
			<input type="hidden" name={key} value={val} />
		}

		<label>Order Details</label>
		<div>
			<pre>{fmt.Sprintf("%v", previousValues)}</pre>
		</div>

		<button
			hx-post="/api/order"
			hx-target="#order-flow"
			hx-swap="innerHTML"
			hx-headers='{"Content-Type": "application/json"}'
			hx-vals={utils.JsonEscapedString(previousValues)}
			class="x-4 py-2 px-6 bg-green-600 text-text-dark font-semibold rounded-lg shadow hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-yellow-400 transition">
			Submit
		</button>
	</form>
	
}

templ OrderStart() {
	<div>
		<h1>Lets begin!</h1>
		<form 
			hx-post="/order/step/0" 
			hx-target="#order-flow" 
			hx-swap="innerHTML"
		>
		<button 
			class="x-4 py-2 px-6 bg-yellow text-text-dark font-semibold rounded-lg shadow hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-yellow-400 transition">
			Start	
		</button>
		</form>
	</div>
}

templ OrderComplete() {
	@layout("This is a title") {
		<div>
			<h1>ðŸŽ‰ Yippee!! ðŸŽ‰</h1>
			<p>Order confirmed!</p>
		</div>
	}
}

templ OrderFailed() {
	@layout("This is another title") {
		<div>
			<h1>Oops!</h1>
			<p>i may have broken something, please let Dan know!</p>
			<button 
				hx-get="/"
				hx-target="body"
				hx-swap="innerHTML"
				hx-push-url="/"
				class="x-4 py-2 px-6 bg-yellow text-text-light font-semibold rounded-lg shadow hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-yellow-400 transition">
				Go Back
			</button>
		</div>
	}
}
